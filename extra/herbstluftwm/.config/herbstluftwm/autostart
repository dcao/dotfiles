#!/usr/bin/env bash

# this is a simple config for herbstluftwm

# colors
colorbg='#231f20'
color00='#282828'
color01='#3c3836'
color02='#504945'
color03='#665c54'
color04='#bdae93'
color05='#d5c4a1'
color06='#ebdbb2'
color07='#fbf1c7'
color08='#fb4934'
color09='#fe8019'
color0A='#fabd2f'
color0B='#b8bb26'
color0C='#8ec07c'
color0D='#83a598'
color0E='#d3869b'
color0F='#d65d0e'

# floating stuff
floatmon=floatmon
floattag=fl

# keybindings
Mod=Mod4   # Use the super key as the main modifier

hc() {
    herbstclient "$@"
}

spawn_with_rules() {(
    # this rule also requires, that the client
    # sets the _NET_WM_PID property
    herbstclient rule once pid=$BASHPID maxage=10 "${RULES[@]}"
    exec "$@"
    ) &
}

hc emit_hook reload

# remove all existing keybindings
hc keyunbind --all

hc keybind $Mod-Shift-y quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-w close

# programs
hc keybind $Mod-Return       spawn st
hc keybind $Mod-Shift-Return spawn ~/bin/rofi_tmux
hc keybind Ctrl-Alt-p        spawn rofi-pass
hc keybind Ctrl-Alt-f        spawn ~/bin/imgur-shot
hc keybind $Mod-a            spawn st -e ranger
hc keybind $Mod-Shift-a      spawn ~/bin/toggle_kb

# Media
hc keybind XF86AudioRaiseVolume spawn pactl set-sink-volume @DEFAULT_SINK@ +1%
hc keybind XF86AudioLowerVolume spawn pactl set-sink-volume @DEFAULT_SINK@ -1%
hc keybind XF86AudioMute spawn pactl set-sink-mute @DEFAULT_SINK@ toggle
hc keybind XF86AudioMicMute spawn pactl @DEFAULT_SOURCE@ 1 toggle
hc keybind XF86MonBrightnessUp spawn xbacklight -inc 5
hc keybind XF86MonBrightnessDown spawn xbacklight -dec 5

hc new_attr bool my_mpd_scroll
hc attr my_mpd_scroll true
hc keybind $Mod-m chain , attr my_mpd_scroll toggle , spawn notify-send -u low "herbst" "mpd title scroll toggled"

feh --bg-fill ~/.wall.jpg &

# basic movement
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-i       split   right   0.5
hc keybind $Mod-o       split   bottom  0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames
resizestep=0.005
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
hc set default_frame_layout 3
hc set_layout 3

tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# rename tags
hc keybind $Mod-r spawn ~/bin/rofi_rename

# layouting
hc keybind $Mod-q remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

hc set focus_follows_mouse 1

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         spawn rofi -combi window,run -show combi
hc keybind Alt-Tab          cycle_all +1
hc keybind Alt-Shift-Tab    cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-u jumpto urgent

# theme
# note: inner_border = border when not focused
# useless settings are commented out
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1

# frame settings don't work with attrs because frames aren't objects
hc set frame_border_width 0
hc set frame_border_inner_width 0
# hc set frame_border_active_color $color07
# hc set frame_border_normal_color $colorbg
hc set frame_active_opacity 20
hc set frame_normal_opacity 10
hc keybind $Mod-b chain , cycle_value frame_active_opacity 0 15 20 , cycle_value frame_normal_opacity 0 -1 10 , spawn notify-send -u low "herbst" "frame active opacity toggled"
# we don't want frame backgrounds to be completely transparent, just partially
hc set frame_bg_transparent 0
# hc set frame_transparent width 0
hc set frame_bg_active_color $color0D
hc set frame_bg_normal_color $color0D
hc set always_show_frame 1
hc set frame_gap 4
hc set frame_padding 0

hc attr theme.active.color $color0C
hc attr theme.normal.color $colorbg
hc attr theme.urgent.color $color09
hc attr theme.inner_width 0
hc attr theme.inner_color black
hc attr theme.border_width 2
hc attr theme.floating.border_width 2
hc attr theme.floating.outer_width 0
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#3E4A00'
hc attr theme.active.outer_color '#3E4A00'
hc attr theme.background_color $colorbg

hc set window_gap 0
hc set smart_window_surroundings 0
hc set smart_frame_surroundings 0
hc set mouse_recenter_gap 0

# rules
hc unrule -F
hc rule focus=on # normally focus new clients
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' monitor=$floatmon tag=$floattag
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

# unlock, just to be sure
hc unlock

hc set tree_style '╾│ ├└╼─┐'

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
hc set auto_detect_monitors 1

# panel! requires polybar
pkill polybar || true
for monitor in $(xrandr --query | grep " connected" | cut -d" " -f1); do
    # start it on each monitor
    MONITOR=$monitor polybar --reload herbst &
done

# if hc silent ! get_attr my_not_first_autostart ; then
#     source ~/.config/herbstluftwm/floatmon
#     echo ""
# fi

source ~/.config/herbstluftwm/floatmon

for monitor in $(hc list_monitors | cut -d":" -f1); do
    hc pad $monitor 0 0 36
done

hc silent new_attr bool my_not_first_autostart
